// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,r;e=this,r=function(e){"use strict";var r="function"==typeof Object.defineProperty?Object.defineProperty:null,t=Object.defineProperty,n=Object.prototype,o=n.toString,u=n.__defineGetter__,a=n.__defineSetter__,i=n.__lookupGetter__,l=n.__lookupSetter__,f=function(){try{return r({},"x",{}),!0}catch(e){return!1}}()?t:function(e,r,t){var f,c,_,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof t||null===t||"[object Array]"===o.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(i.call(e,r)||l.call(e,r)?(f=e.__proto__,e.__proto__=n,delete e[r],e[r]=t.value,e.__proto__=f):e[r]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&u&&u.call(e,r,t.get),p&&a&&a.call(e,r,t.set),e};function c(e,r,t){f(e,r,{configurable:!1,enumerable:!1,writable:!1,value:t})}function _(e){return e!=e}function p(e){return Math.abs(e)}function d(e,r,t,n,o){var u,a,i,l,f,c,d,s;if(a=t<0?(1-e)*t:0,i=o<0?-o:0,u=0,e<=0)return n[i]=u,n[i+o]=0,n;if(1===e||0===t)return _(r[a])?(n[i]=u,n[i+o]=0,n):(n[i]=r[a],n[i+o]=1,n);for(c=0,d=0,s=0;s<e;s++)!1===_(l=r[a])&&(f=u+l,p(u)>=p(l)?c+=u-f+l:c+=l-f+u,u=f,d+=1),a+=t;return n[i]=u+c,n[i+o]=d,n}function s(e,r,t,n,o,u,a){var i,l,f,c,d,s,y,b;if(l=n,f=a,i=0,e<=0)return o[f]=i,o[f+u]=0,o;if(1===e||0===t)return _(r[l])?(o[f]=i,o[f+u]=0,o):(o[f]=r[l],o[f+u]=1,o);for(s=0,y=0,b=0;b<e;b++)!1===_(c=r[l])&&(d=i+c,p(i)>=p(c)?s+=i-d+c:s+=c-d+i,i=d,y+=1),l+=t;return o[f]=i+s,o[f+u]=y,o}function y(e,r,t,n,o){return d(e,r,t,n,o)}function b(e,r,t,n,o,u,a){return s(e,r,t,n,o,u,a)}c(d,"ndarray",s),c(y,"ndarray",b),e.default=y,e.ndarray=b,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).dnannsum={});
//# sourceMappingURL=browser.js.map
